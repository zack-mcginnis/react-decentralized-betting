{
  "contractName": "BetExchange",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBuyer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ValueNotEven",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Aborted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ItemReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PurchaseConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SellerRefunded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum BetExchange.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "abort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmPurchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValueNotEven\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Aborted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ItemReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PurchaseConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SellerRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmPurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BetExchange.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidState()\":[{\"notice\":\"The function cannot be called at the current state.\"}],\"OnlyBuyer()\":[{\"notice\":\"Only the buyer can call this function.\"}],\"OnlySeller()\":[{\"notice\":\"Only the seller can call this function.\"}],\"ValueNotEven()\":[{\"notice\":\"The provided value has to be even.\"}]},\"kind\":\"user\",\"methods\":{\"abort()\":{\"notice\":\"Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked.\"},\"confirmPurchase()\":{\"notice\":\"Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ether will be locked until confirmReceived is called.\"},\"confirmReceived()\":{\"notice\":\"Confirm that you (the buyer) received the item. This will release the locked ether.\"},\"refundSeller()\":{\"notice\":\"This function refunds the seller, i.e. pays back the locked funds of the seller.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BetExchange.sol\":\"BetExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/BetExchange.sol\":{\"keccak256\":\"0xdce1a293e06d310b562b0754cfcdeda51afd1370acba6590609185879d75c2f4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5ae521ef06ddcc6d5a1c4baf84f731807be645c87fd1c97ff89c10fe1195d4fc\",\"dweb:/ipfs/QmXijYFKbcZPFdFJWT8pYtXD4KFFzWfjWGhFCL7hNmsVo4\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600234610052919061010c565b600081905550346000546002610068919061013d565b1461009f576040517fbe3e4c4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610197565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610117826100a4565b9150610122836100a4565b925082610132576101316100ae565b5b828204905092915050565b6000610148826100a4565b9150610153836100a4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561018c5761018b6100dd565b5b828202905092915050565b610a1d806101a66000396000f3fe60806040526004361061007b5760003560e01c806373fac6f01161004e57806373fac6f014610118578063c19d93fb1461012f578063c7981b1b1461015a578063d6960697146101715761007b565b806308551a531461008057806335a063b4146100ab5780633fa4f245146100c25780637150d8ae146100ed575b600080fd5b34801561008c57600080fd5b5061009561017b565b6040516100a2919061087d565b60405180910390f35b3480156100b757600080fd5b506100c06101a1565b005b3480156100ce57600080fd5b506100d7610359565b6040516100e491906108b1565b60405180910390f35b3480156100f957600080fd5b5061010261035f565b60405161010f919061087d565b60405180910390f35b34801561012457600080fd5b5061012d610385565b005b34801561013b57600080fd5b5061014461053e565b6040516101519190610943565b60405180910390f35b34801561016657600080fd5b5061016f610551565b005b610179610717565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610228576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561023d5761023c6108cc565b5b600260149054906101000a900460ff16600381111561025f5761025e6108cc565b5b14610296576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf60405160405180910390a16003600260146101000a81548160ff021916908360038111156102e8576102e76108cc565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610355573d6000803e3d6000fd5b5050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040c576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001806003811115610421576104206108cc565b5b600260149054906101000a900460ff166003811115610443576104426108cc565b5b1461047a576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf760405160405180910390a160028060146101000a81548160ff021916908360038111156104cb576104ca6108cc565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561053a573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d8576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156105ed576105ec6108cc565b5b600260149054906101000a900460ff16600381111561060f5761060e6108cc565b5b14610646576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffda69c32bcfdba840a167777906b173b607eb8b4d8853b97a80d26e613d858db60405160405180910390a16003600260146101000a81548160ff02191690836003811115610698576106976108cc565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60005460036106e8919061098d565b9081150290604051600060405180830381858888f19350505050158015610713573d6000803e3d6000fd5b5050565b600080600381111561072c5761072b6108cc565b5b600260149054906101000a900460ff16600381111561074e5761074d6108cc565b5b14610785576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546002610794919061098d565b3414806107a057600080fd5b7fd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc88160405160405180910390a133600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690836003811115610833576108326108cc565b5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108678261083c565b9050919050565b6108778161085c565b82525050565b6000602082019050610892600083018461086e565b92915050565b6000819050919050565b6108ab81610898565b82525050565b60006020820190506108c660008301846108a2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061090c5761090b6108cc565b5b50565b600081905061091d826108fb565b919050565b600061092d8261090f565b9050919050565b61093d81610922565b82525050565b60006020820190506109586000830184610934565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099882610898565b91506109a383610898565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109dc576109db61095e565b5b82820290509291505056fea2646970667358221220746a48e5e283c0c49521adcf88eab9c2182f8805af0500be49c50cc900a283d964736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806373fac6f01161004e57806373fac6f014610118578063c19d93fb1461012f578063c7981b1b1461015a578063d6960697146101715761007b565b806308551a531461008057806335a063b4146100ab5780633fa4f245146100c25780637150d8ae146100ed575b600080fd5b34801561008c57600080fd5b5061009561017b565b6040516100a2919061087d565b60405180910390f35b3480156100b757600080fd5b506100c06101a1565b005b3480156100ce57600080fd5b506100d7610359565b6040516100e491906108b1565b60405180910390f35b3480156100f957600080fd5b5061010261035f565b60405161010f919061087d565b60405180910390f35b34801561012457600080fd5b5061012d610385565b005b34801561013b57600080fd5b5061014461053e565b6040516101519190610943565b60405180910390f35b34801561016657600080fd5b5061016f610551565b005b610179610717565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610228576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561023d5761023c6108cc565b5b600260149054906101000a900460ff16600381111561025f5761025e6108cc565b5b14610296576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf60405160405180910390a16003600260146101000a81548160ff021916908360038111156102e8576102e76108cc565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610355573d6000803e3d6000fd5b5050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040c576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001806003811115610421576104206108cc565b5b600260149054906101000a900460ff166003811115610443576104426108cc565b5b1461047a576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf760405160405180910390a160028060146101000a81548160ff021916908360038111156104cb576104ca6108cc565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f1935050505015801561053a573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d8576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060038111156105ed576105ec6108cc565b5b600260149054906101000a900460ff16600381111561060f5761060e6108cc565b5b14610646576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffda69c32bcfdba840a167777906b173b607eb8b4d8853b97a80d26e613d858db60405160405180910390a16003600260146101000a81548160ff02191690836003811115610698576106976108cc565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60005460036106e8919061098d565b9081150290604051600060405180830381858888f19350505050158015610713573d6000803e3d6000fd5b5050565b600080600381111561072c5761072b6108cc565b5b600260149054906101000a900460ff16600381111561074e5761074d6108cc565b5b14610785576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546002610794919061098d565b3414806107a057600080fd5b7fd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc88160405160405180910390a133600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690836003811115610833576108326108cc565b5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108678261083c565b9050919050565b6108778161085c565b82525050565b6000602082019050610892600083018461086e565b92915050565b6000819050919050565b6108ab81610898565b82525050565b60006020820190506108c660008301846108a2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061090c5761090b6108cc565b5b50565b600081905061091d826108fb565b919050565b600061092d8261090f565b9050919050565b61093d81610922565b82525050565b60006020820190506109586000830184610934565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099882610898565b91506109a383610898565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109dc576109db61095e565b5b82820290509291505056fea2646970667358221220746a48e5e283c0c49521adcf88eab9c2182f8805af0500be49c50cc900a283d964736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1004:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:7",
                "type": ""
              }
            ],
            "src": "7:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "304:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "314:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "314:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "411:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "442:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "276:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "504:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "514:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "537:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "519:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "514:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "571:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "553:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "548:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "595:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "597:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "597:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "597:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "592:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "582:35:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "627:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "636:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "639:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "627:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "493:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "496:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "502:1:7",
                "type": ""
              }
            ],
            "src": "462:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "701:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "711:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "734:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "716:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "711:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "745:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "768:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "750:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "745:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "943:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "945:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "945:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "945:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "855:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "848:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "848:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "841:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "841:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "863:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "870:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "938:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "866:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "866:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "860:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "837:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "834:131:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "975:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "990:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "993:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "986:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "684:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "687:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "693:7:7",
                "type": ""
              }
            ],
            "src": "653:348:7"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2598:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:7",
                "type": ""
              }
            ],
            "src": "7:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "202:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "231:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "213:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "202:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "174:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "184:7:7",
                "type": ""
              }
            ],
            "src": "139:104:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:61:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "347:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "378:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "352:25:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:45:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "340:45:7"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "318:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "325:3:7",
                "type": ""
              }
            ],
            "src": "249:142:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:140:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "521:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "617:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "557:59:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:87:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "557:87:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "495:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "506:4:7",
                "type": ""
              }
            ],
            "src": "397:254:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "702:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "712:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "723:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "712:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "684:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "694:7:7",
                "type": ""
              }
            ],
            "src": "657:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "822:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "845:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "827:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "815:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "793:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "800:3:7",
                "type": ""
              }
            ],
            "src": "740:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "962:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "972:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "984:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "995:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "972:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1076:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1008:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1008:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "946:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "957:4:7",
                "type": ""
              }
            ],
            "src": "864:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1120:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1137:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1130:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1234:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1237:4:7",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1227:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1227:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1258:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1261:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:15:7"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1092:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1330:62:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1364:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1366:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1366:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1366:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1353:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1360:1:7",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1350:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1350:12:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:20:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1340:46:7"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$585",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1323:5:7",
                "type": ""
              }
            ],
            "src": "1278:114:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1452:75:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1462:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1473:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1462:7:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1515:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$585",
                      "nodeType": "YulIdentifier",
                      "src": "1479:35:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:42:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1479:42:7"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$585",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1434:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1444:7:7",
                "type": ""
              }
            ],
            "src": "1398:129:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1600:62:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1610:46:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1650:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$585",
                      "nodeType": "YulIdentifier",
                      "src": "1623:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:33:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1610:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$585_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1580:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1590:9:7",
                "type": ""
              }
            ],
            "src": "1533:129:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1740:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1757:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1800:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$585_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1762:37:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:44:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:57:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1750:57:7"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$585_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1728:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1735:3:7",
                "type": ""
              }
            ],
            "src": "1668:145:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1924:131:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1934:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1946:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1957:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1942:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1934:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2021:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2034:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2045:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2030:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2030:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$585_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1970:50:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:78:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1970:78:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$585__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1896:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1908:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1919:4:7",
                "type": ""
              }
            ],
            "src": "1819:236:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2089:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2106:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2109:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2099:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2099:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2203:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2206:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2196:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2196:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2227:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2230:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2220:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2220:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2061:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2295:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2305:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2328:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2310:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2305:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2339:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2362:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2344:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2339:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2537:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2539:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2539:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2539:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2449:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2442:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2442:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2435:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2435:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2457:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2464:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2532:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2460:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2460:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2454:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2454:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2431:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2428:131:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2569:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2584:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2587:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2580:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2569:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2278:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2281:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2287:7:7",
                "type": ""
              }
            ],
            "src": "2247:348:7"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$585(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$585(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$585(value)\n    }\n\n    function convert_t_enum$_State_$585_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$585(value)\n    }\n\n    function abi_encode_t_enum$_State_$585_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$585_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$585__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$585_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:3219:2:-:0;;;1398:10;1381:6;;:28;;;;;;;;;;;;;;;;;;1439:1;1427:9;:13;;;;:::i;:::-;1419:5;:21;;;;1469:9;1459:5;;1455:1;:9;;;;:::i;:::-;1454:24;1450:51;;1487:14;;;;;;;;;;;;;;1450:51;61:3219;;7:77:7;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:180;324:77;321:1;314:88;421:4;418:1;411:15;445:4;442:1;435:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;653:348::-;693:7;716:20;734:1;716:20;:::i;:::-;711:25;;750:20;768:1;750:20;:::i;:::-;745:25;;938:1;870:66;866:74;863:1;860:81;855:1;848:9;841:17;837:105;834:131;;;945:18;;:::i;:::-;834:131;993:1;990;986:9;975:20;;653:348;;;;:::o;61:3219:2:-;;;;;;;",
  "deployedSourceMap": "61:3219:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;114:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1644:348;;;;;;;;;;;;;:::i;:::-;;88:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;149:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:325;;;;;;;;;;;;;:::i;:::-;;358:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2946:332;;;;;;;;;;;;;:::i;:::-;;2165:247;;;:::i;:::-;;114:29;;;;;;;;;;;;;:::o;1644:348::-;918:6;;;;;;;;;;;904:20;;:10;:20;;;900:45;;933:12;;;;;;;;;;;;;;900:45;1689:13:::1;1023:6;1014:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1010:42;;1038:14;;;;;;;;;;;;;;1010:42;1719:9:::2;;;;;;;;;;1746:14;1738:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1947:6;;;;;;;;;;;:15;;:38;1963:21;1947:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;955:1:::1;1644:348::o:0;88:20::-;;;;:::o;149:28::-;;;;;;;;;;;;;:::o;2518:325::-;819:5;;;;;;;;;;;805:19;;:10;:19;;;801:43;;833:11;;;;;;;;;;;;;;801:43;2572:12:::1;1023:6;1014:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1010:42;;1038:14;;;;;;;;;;;;;;1010:42;2601:14:::2;;;;;;;;;;2791:13;2783:5:::0;::::2;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2815:5;;;;;;;;;;;:14;;:21;2830:5;;2815:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;854:1:::1;2518:325::o:0;358:18::-;;;;;;;;;;;;;:::o;2946:332::-;918:6;;;;;;;;;;;904:20;;:10;:20;;;900:45;;933:12;;;;;;;;;;;;;;900:45;2998:13:::1;1023:6;1014:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1010:42;;1038:14;;;;;;;;;;;;;;1010:42;3028:16:::2;;;;;;;;;;3220:14;3212:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3245:6;;;;;;;;;;;:15;;:26;3265:5;;3261:1;:9;;;;:::i;:::-;3245:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;955:1:::1;2946:332::o:0;2165:247::-;2241:13;1023:6;1014:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;1010:42;;1038:14;;;;;;;;;;;;;;1010:42;2292:5:::1;;2288:1;:9;;;;:::i;:::-;2274;:24;437:10;429:19;;;::::0;::::1;;2319::::2;;;;;;;;;;2364:10;2348:5;;:27;;;;;;;;;;;;;;;;;;2393:12;2385:5;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1062:1:::1;2165:247:::0;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:77::-;694:7;723:5;712:16;;657:77;;;:::o;740:118::-;827:24;845:5;827:24;:::i;:::-;822:3;815:37;740:118;;:::o;864:222::-;957:4;995:2;984:9;980:18;972:26;;1008:71;1076:1;1065:9;1061:17;1052:6;1008:71;:::i;:::-;864:222;;;;:::o;1092:180::-;1140:77;1137:1;1130:88;1237:4;1234:1;1227:15;1261:4;1258:1;1251:15;1278:114;1360:1;1353:5;1350:12;1340:46;;1366:18;;:::i;:::-;1340:46;1278:114;:::o;1398:129::-;1444:7;1473:5;1462:16;;1479:42;1515:5;1479:42;:::i;:::-;1398:129;;;:::o;1533:::-;1590:9;1623:33;1650:5;1623:33;:::i;:::-;1610:46;;1533:129;;;:::o;1668:145::-;1762:44;1800:5;1762:44;:::i;:::-;1757:3;1750:57;1668:145;;:::o;1819:236::-;1919:4;1957:2;1946:9;1942:18;1934:26;;1970:78;2045:1;2034:9;2030:17;2021:6;1970:78;:::i;:::-;1819:236;;;;:::o;2061:180::-;2109:77;2106:1;2099:88;2206:4;2203:1;2196:15;2230:4;2227:1;2220:15;2247:348;2287:7;2310:20;2328:1;2310:20;:::i;:::-;2305:25;;2344:20;2362:1;2344:20;:::i;:::-;2339:25;;2532:1;2464:66;2460:74;2457:1;2454:81;2449:1;2442:9;2435:17;2431:105;2428:131;;;2539:18;;:::i;:::-;2428:131;2587:1;2584;2580:9;2569:20;;2247:348;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.4;\n\ncontract BetExchange {\n    uint256 public value;\n    address payable public seller;\n    address payable public buyer;\n\n    enum State {\n        Created,\n        Locked,\n        Release, \n        Inactive\n    }\n    // The state variable has a default value of the first member, `State.created`\n    State public state;\n\n    modifier condition(bool condition_) {\n        require(condition_);\n        _;\n    }\n\n    /// Only the buyer can call this function.\n    error OnlyBuyer();\n    /// Only the seller can call this function.\n    error OnlySeller();\n    /// The function cannot be called at the current state.\n    error InvalidState();\n    /// The provided value has to be even.\n    error ValueNotEven();\n\n    modifier onlyBuyer() {\n        if (msg.sender != buyer) revert OnlyBuyer();\n        _;\n    }\n\n    modifier onlySeller() {\n        if (msg.sender != seller) revert OnlySeller();\n        _;\n    }\n\n    modifier inState(State state_) {\n        if (state != state_) revert InvalidState();\n        _;\n    }\n\n    event Aborted();\n    event PurchaseConfirmed();\n    event ItemReceived();\n    event SellerRefunded();\n\n    // Ensure that `msg.value` is an even number.\n    // Division will truncate if it is an odd number.\n    // Check via multiplication that it wasn't an odd number.\n    constructor() payable {\n        seller = payable(msg.sender);\n        value = msg.value / 2;\n        if ((2 * value) != msg.value) revert ValueNotEven();\n    }\n\n    /// Abort the purchase and reclaim the ether.\n    /// Can only be called by the seller before\n    /// the contract is locked.\n    function abort() external onlySeller inState(State.Created) {\n        emit Aborted();\n        state = State.Inactive;\n        // We use transfer here directly. It is\n        // reentrancy-safe, because it is the\n        // last call in this function and we\n        // already changed the state.\n        seller.transfer(address(this).balance);\n    }\n\n    /// Confirm the purchase as buyer.\n    /// Transaction has to include `2 * value` ether.\n    /// The ether will be locked until confirmReceived\n    /// is called.\n    function confirmPurchase()\n        external\n        payable\n        inState(State.Created)\n        condition(msg.value == (2 * value))\n    {\n        emit PurchaseConfirmed();\n        buyer = payable(msg.sender);\n        state = State.Locked;\n    }\n\n    /// Confirm that you (the buyer) received the item.\n    /// This will release the locked ether.\n    function confirmReceived() external onlyBuyer inState(State.Locked) {\n        emit ItemReceived();\n        // It is important to change the state first because\n        // otherwise, the contracts called using `send` below\n        // can call in again here.\n        state = State.Release;\n\n        buyer.transfer(value);\n    }\n\n    /// This function refunds the seller, i.e.\n    /// pays back the locked funds of the seller.\n    function refundSeller() external onlySeller inState(State.Release) {\n        emit SellerRefunded();\n        // It is important to change the state first because\n        // otherwise, the contracts called using `send` below\n        // can call in again here.\n        state = State.Inactive;\n\n        seller.transfer(3 * value);\n    }\n}\n",
  "sourcePath": "/home/z/code/react-decentralized-betting/contracts/BetExchange.sol",
  "ast": {
    "absolutePath": "project:/contracts/BetExchange.sol",
    "exportedSymbols": {
      "BetExchange": [
        802
      ]
    },
    "id": 803,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 574,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BetExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802
        ],
        "name": "BetExchange",
        "nameLocation": "70:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 576,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "103:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "88:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 575,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "88:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 578,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "137:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "114:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 577,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "114:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 580,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "172:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "149:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 579,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "149:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BetExchange.State",
            "id": 585,
            "members": [
              {
                "id": 581,
                "name": "Created",
                "nameLocation": "205:7:2",
                "nodeType": "EnumValue",
                "src": "205:7:2"
              },
              {
                "id": 582,
                "name": "Locked",
                "nameLocation": "222:6:2",
                "nodeType": "EnumValue",
                "src": "222:6:2"
              },
              {
                "id": 583,
                "name": "Release",
                "nameLocation": "238:7:2",
                "nodeType": "EnumValue",
                "src": "238:7:2"
              },
              {
                "id": 584,
                "name": "Inactive",
                "nameLocation": "256:8:2",
                "nodeType": "EnumValue",
                "src": "256:8:2"
              }
            ],
            "name": "State",
            "nameLocation": "189:5:2",
            "nodeType": "EnumDefinition",
            "src": "184:86:2"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 588,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "371:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "358:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$585",
              "typeString": "enum BetExchange.State"
            },
            "typeName": {
              "id": 587,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 586,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 585,
                "src": "358:5:2"
              },
              "referencedDeclaration": 585,
              "src": "358:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$585",
                "typeString": "enum BetExchange.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "419:47:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "condition_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "437:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "429:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "429:19:2"
                },
                {
                  "id": 596,
                  "nodeType": "PlaceholderStatement",
                  "src": "458:1:2"
                }
              ]
            },
            "id": 598,
            "name": "condition",
            "nameLocation": "392:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "condition_",
                  "nameLocation": "407:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "402:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "401:17:2"
            },
            "src": "383:83:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "472:42:2",
              "text": "Only the buyer can call this function."
            },
            "id": 601,
            "name": "OnlyBuyer",
            "nameLocation": "525:9:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:2:2"
            },
            "src": "519:18:2"
          },
          {
            "documentation": {
              "id": 602,
              "nodeType": "StructuredDocumentation",
              "src": "542:43:2",
              "text": "Only the seller can call this function."
            },
            "id": 604,
            "name": "OnlySeller",
            "nameLocation": "596:10:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:2"
            },
            "src": "590:19:2"
          },
          {
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "614:55:2",
              "text": "The function cannot be called at the current state."
            },
            "id": 607,
            "name": "InvalidState",
            "nameLocation": "680:12:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:2:2"
            },
            "src": "674:21:2"
          },
          {
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "700:38:2",
              "text": "The provided value has to be even."
            },
            "id": 610,
            "name": "ValueNotEven",
            "nameLocation": "749:12:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:2"
            },
            "src": "743:21:2"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "791:71:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 612,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "805:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "805:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 614,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "819:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "805:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "IfStatement",
                  "src": "801:43:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 616,
                        "name": "OnlyBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "833:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "833:11:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 618,
                    "nodeType": "RevertStatement",
                    "src": "826:18:2"
                  }
                },
                {
                  "id": 620,
                  "nodeType": "PlaceholderStatement",
                  "src": "854:1:2"
                }
              ]
            },
            "id": 622,
            "name": "onlyBuyer",
            "nameLocation": "779:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:2:2"
            },
            "src": "770:92:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "890:73:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 624,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "904:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "904:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 626,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "918:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "904:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "nodeType": "IfStatement",
                  "src": "900:45:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 628,
                        "name": "OnlySeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "933:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "933:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 630,
                    "nodeType": "RevertStatement",
                    "src": "926:19:2"
                  }
                },
                {
                  "id": 632,
                  "nodeType": "PlaceholderStatement",
                  "src": "955:1:2"
                }
              ]
            },
            "id": 634,
            "name": "onlySeller",
            "nameLocation": "877:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "887:2:2"
            },
            "src": "868:95:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1000:70:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 639,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1014:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 640,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "1023:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "1014:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 645,
                  "nodeType": "IfStatement",
                  "src": "1010:42:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 642,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1038:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1038:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 644,
                    "nodeType": "RevertStatement",
                    "src": "1031:21:2"
                  }
                },
                {
                  "id": 646,
                  "nodeType": "PlaceholderStatement",
                  "src": "1062:1:2"
                }
              ]
            },
            "id": 648,
            "name": "inState",
            "nameLocation": "978:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "992:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "986:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$585",
                    "typeString": "enum BetExchange.State"
                  },
                  "typeName": {
                    "id": 636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 635,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 585,
                      "src": "986:5:2"
                    },
                    "referencedDeclaration": 585,
                    "src": "986:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:14:2"
            },
            "src": "969:101:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 650,
            "name": "Aborted",
            "nameLocation": "1082:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:2:2"
            },
            "src": "1076:16:2"
          },
          {
            "anonymous": false,
            "id": 652,
            "name": "PurchaseConfirmed",
            "nameLocation": "1103:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:2:2"
            },
            "src": "1097:26:2"
          },
          {
            "anonymous": false,
            "id": 654,
            "name": "ItemReceived",
            "nameLocation": "1134:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:2:2"
            },
            "src": "1128:21:2"
          },
          {
            "anonymous": false,
            "id": 656,
            "name": "SellerRefunded",
            "nameLocation": "1160:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:2:2"
            },
            "src": "1154:23:2"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "1371:137:2",
              "statements": [
                {
                  "expression": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 659,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "1381:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 662,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1398:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1398:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1390:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1390:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1390:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1381:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:28:2"
                },
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 667,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1419:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1427:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1427:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1439:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1427:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1419:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:21:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1455:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 675,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1459:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1455:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 677,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1454:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 678,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1469:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1469:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1454:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 684,
                  "nodeType": "IfStatement",
                  "src": "1450:51:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 681,
                        "name": "ValueNotEven",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "1487:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1487:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 683,
                    "nodeType": "RevertStatement",
                    "src": "1480:21:2"
                  }
                }
              ]
            },
            "id": 686,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:2:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:2"
            },
            "scope": 802,
            "src": "1349:159:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "1704:288:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 696,
                      "name": "Aborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "1719:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:9:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "EmitStatement",
                  "src": "1714:14:2"
                },
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 699,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1738:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 700,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "1746:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "1746:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "1738:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:22:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 709,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1971:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BetExchange_$802",
                                "typeString": "contract BetExchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BetExchange_$802",
                                "typeString": "contract BetExchange"
                              }
                            ],
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1963:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 707,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1963:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1963:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 704,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "1947:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1947:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:38:2"
                }
              ]
            },
            "documentation": {
              "id": 687,
              "nodeType": "StructuredDocumentation",
              "src": "1514:125:2",
              "text": "Abort the purchase and reclaim the ether.\n Can only be called by the seller before\n the contract is locked."
            },
            "functionSelector": "35a063b4",
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 689,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 634,
                  "src": "1670:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1670:10:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 692,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1689:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 581,
                    "src": "1689:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 691,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "1681:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1681:22:2"
              }
            ],
            "name": "abort",
            "nameLocation": "1653:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:2:2"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1704:0:2"
            },
            "scope": 802,
            "src": "1644:348:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "2304:108:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 732,
                      "name": "PurchaseConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "2319:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2319:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "EmitStatement",
                  "src": "2314:24:2"
                },
                {
                  "expression": {
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 735,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "2348:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 738,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2364:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2364:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2356:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2356:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2356:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2348:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:27:2"
                },
                {
                  "expression": {
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 743,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "2385:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 744,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "2393:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 582,
                      "src": "2393:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "2385:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:20:2"
                }
              ]
            },
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "1998:162:2",
              "text": "Confirm the purchase as buyer.\n Transaction has to include `2 * value` ether.\n The ether will be locked until confirmReceived\n is called."
            },
            "functionSelector": "d6960697",
            "id": 749,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 719,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2241:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 581,
                    "src": "2241:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 721,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 718,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "2233:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2233:22:2"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 723,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2274:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2274:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2288:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 726,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "2292:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2288:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 728,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2287:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2274:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 730,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 722,
                  "name": "condition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 598,
                  "src": "2264:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2264:35:2"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "2174:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:2:2"
            },
            "returnParameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:0:2"
            },
            "scope": 802,
            "src": "2165:247:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "2586:257:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 759,
                      "name": "ItemReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "2601:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "EmitStatement",
                  "src": "2596:19:2"
                },
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "2783:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 763,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "2791:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "2791:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "2783:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "2830:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 767,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "2815:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2815:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:21:2"
                }
              ]
            },
            "documentation": {
              "id": 750,
              "nodeType": "StructuredDocumentation",
              "src": "2418:95:2",
              "text": "Confirm that you (the buyer) received the item.\n This will release the locked ether."
            },
            "functionSelector": "73fac6f0",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 752,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 622,
                  "src": "2554:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2554:9:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 755,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2572:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 582,
                    "src": "2572:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 757,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 754,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "2564:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2564:21:2"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2527:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2542:2:2"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:0:2"
            },
            "scope": 802,
            "src": "2518:325:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "3013:265:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 784,
                      "name": "SellerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "3028:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3028:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "EmitStatement",
                  "src": "3023:21:2"
                },
                {
                  "expression": {
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 787,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "3212:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 788,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "3220:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "3220:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "3212:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "3212:22:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3261:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 796,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "3265:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3261:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 792,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "3245:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3245:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:26:2"
                }
              ]
            },
            "documentation": {
              "id": 775,
              "nodeType": "StructuredDocumentation",
              "src": "2849:92:2",
              "text": "This function refunds the seller, i.e.\n pays back the locked funds of the seller."
            },
            "functionSelector": "c7981b1b",
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 777,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 634,
                  "src": "2979:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2979:10:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 780,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2998:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 583,
                    "src": "2998:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 782,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 779,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "2990:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2990:22:2"
              }
            ],
            "name": "refundSeller",
            "nameLocation": "2955:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:2:2"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3013:0:2"
            },
            "scope": 802,
            "src": "2946:332:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 803,
        "src": "61:3219:2",
        "usedErrors": [
          601,
          604,
          607,
          610
        ]
      }
    ],
    "src": "36:3245:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BetExchange.sol",
    "exportedSymbols": {
      "BetExchange": [
        802
      ]
    },
    "id": 803,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 574,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BetExchange",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802
        ],
        "name": "BetExchange",
        "nameLocation": "70:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 576,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "103:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "88:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 575,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "88:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 578,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "137:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "114:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 577,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "114:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 580,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "172:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "149:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 579,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "149:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BetExchange.State",
            "id": 585,
            "members": [
              {
                "id": 581,
                "name": "Created",
                "nameLocation": "205:7:2",
                "nodeType": "EnumValue",
                "src": "205:7:2"
              },
              {
                "id": 582,
                "name": "Locked",
                "nameLocation": "222:6:2",
                "nodeType": "EnumValue",
                "src": "222:6:2"
              },
              {
                "id": 583,
                "name": "Release",
                "nameLocation": "238:7:2",
                "nodeType": "EnumValue",
                "src": "238:7:2"
              },
              {
                "id": 584,
                "name": "Inactive",
                "nameLocation": "256:8:2",
                "nodeType": "EnumValue",
                "src": "256:8:2"
              }
            ],
            "name": "State",
            "nameLocation": "189:5:2",
            "nodeType": "EnumDefinition",
            "src": "184:86:2"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 588,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "371:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "358:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$585",
              "typeString": "enum BetExchange.State"
            },
            "typeName": {
              "id": 587,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 586,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 585,
                "src": "358:5:2"
              },
              "referencedDeclaration": 585,
              "src": "358:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$585",
                "typeString": "enum BetExchange.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "419:47:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "condition_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "437:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "429:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "429:19:2"
                },
                {
                  "id": 596,
                  "nodeType": "PlaceholderStatement",
                  "src": "458:1:2"
                }
              ]
            },
            "id": 598,
            "name": "condition",
            "nameLocation": "392:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "condition_",
                  "nameLocation": "407:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "402:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "401:17:2"
            },
            "src": "383:83:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "472:42:2",
              "text": "Only the buyer can call this function."
            },
            "id": 601,
            "name": "OnlyBuyer",
            "nameLocation": "525:9:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:2:2"
            },
            "src": "519:18:2"
          },
          {
            "documentation": {
              "id": 602,
              "nodeType": "StructuredDocumentation",
              "src": "542:43:2",
              "text": "Only the seller can call this function."
            },
            "id": 604,
            "name": "OnlySeller",
            "nameLocation": "596:10:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:2:2"
            },
            "src": "590:19:2"
          },
          {
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "614:55:2",
              "text": "The function cannot be called at the current state."
            },
            "id": 607,
            "name": "InvalidState",
            "nameLocation": "680:12:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:2:2"
            },
            "src": "674:21:2"
          },
          {
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "700:38:2",
              "text": "The provided value has to be even."
            },
            "id": 610,
            "name": "ValueNotEven",
            "nameLocation": "749:12:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:2"
            },
            "src": "743:21:2"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "791:71:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 612,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "805:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "805:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 614,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "819:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "805:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "IfStatement",
                  "src": "801:43:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 616,
                        "name": "OnlyBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "833:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "833:11:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 618,
                    "nodeType": "RevertStatement",
                    "src": "826:18:2"
                  }
                },
                {
                  "id": 620,
                  "nodeType": "PlaceholderStatement",
                  "src": "854:1:2"
                }
              ]
            },
            "id": 622,
            "name": "onlyBuyer",
            "nameLocation": "779:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:2:2"
            },
            "src": "770:92:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "890:73:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 624,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "904:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "904:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 626,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "918:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "904:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "nodeType": "IfStatement",
                  "src": "900:45:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 628,
                        "name": "OnlySeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "933:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "933:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 630,
                    "nodeType": "RevertStatement",
                    "src": "926:19:2"
                  }
                },
                {
                  "id": 632,
                  "nodeType": "PlaceholderStatement",
                  "src": "955:1:2"
                }
              ]
            },
            "id": 634,
            "name": "onlySeller",
            "nameLocation": "877:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "887:2:2"
            },
            "src": "868:95:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1000:70:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 639,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1014:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 640,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "1023:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "1014:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 645,
                  "nodeType": "IfStatement",
                  "src": "1010:42:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 642,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1038:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1038:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 644,
                    "nodeType": "RevertStatement",
                    "src": "1031:21:2"
                  }
                },
                {
                  "id": 646,
                  "nodeType": "PlaceholderStatement",
                  "src": "1062:1:2"
                }
              ]
            },
            "id": 648,
            "name": "inState",
            "nameLocation": "978:7:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "992:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "986:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$585",
                    "typeString": "enum BetExchange.State"
                  },
                  "typeName": {
                    "id": 636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 635,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 585,
                      "src": "986:5:2"
                    },
                    "referencedDeclaration": 585,
                    "src": "986:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:14:2"
            },
            "src": "969:101:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 650,
            "name": "Aborted",
            "nameLocation": "1082:7:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:2:2"
            },
            "src": "1076:16:2"
          },
          {
            "anonymous": false,
            "id": 652,
            "name": "PurchaseConfirmed",
            "nameLocation": "1103:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:2:2"
            },
            "src": "1097:26:2"
          },
          {
            "anonymous": false,
            "id": 654,
            "name": "ItemReceived",
            "nameLocation": "1134:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:2:2"
            },
            "src": "1128:21:2"
          },
          {
            "anonymous": false,
            "id": 656,
            "name": "SellerRefunded",
            "nameLocation": "1160:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:2:2"
            },
            "src": "1154:23:2"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "1371:137:2",
              "statements": [
                {
                  "expression": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 659,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "1381:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 662,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1398:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1398:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1390:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1390:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1390:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1381:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:28:2"
                },
                {
                  "expression": {
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 667,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1419:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1427:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1427:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1439:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1427:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1419:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:21:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1455:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 675,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1459:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1455:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 677,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1454:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 678,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1469:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1469:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1454:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 684,
                  "nodeType": "IfStatement",
                  "src": "1450:51:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 681,
                        "name": "ValueNotEven",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "1487:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1487:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 683,
                    "nodeType": "RevertStatement",
                    "src": "1480:21:2"
                  }
                }
              ]
            },
            "id": 686,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:2:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:2"
            },
            "scope": 802,
            "src": "1349:159:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "1704:288:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 696,
                      "name": "Aborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "1719:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:9:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "EmitStatement",
                  "src": "1714:14:2"
                },
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 699,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1738:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 700,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "1746:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "1746:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "1738:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:22:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 709,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1971:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BetExchange_$802",
                                "typeString": "contract BetExchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BetExchange_$802",
                                "typeString": "contract BetExchange"
                              }
                            ],
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1963:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 707,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1963:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1963:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 704,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "1947:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1947:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:38:2"
                }
              ]
            },
            "documentation": {
              "id": 687,
              "nodeType": "StructuredDocumentation",
              "src": "1514:125:2",
              "text": "Abort the purchase and reclaim the ether.\n Can only be called by the seller before\n the contract is locked."
            },
            "functionSelector": "35a063b4",
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 689,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 634,
                  "src": "1670:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1670:10:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 692,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1689:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 581,
                    "src": "1689:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 691,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "1681:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1681:22:2"
              }
            ],
            "name": "abort",
            "nameLocation": "1653:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1658:2:2"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1704:0:2"
            },
            "scope": 802,
            "src": "1644:348:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "2304:108:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 732,
                      "name": "PurchaseConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 652,
                      "src": "2319:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2319:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "EmitStatement",
                  "src": "2314:24:2"
                },
                {
                  "expression": {
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 735,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "2348:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 738,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2364:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2364:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2356:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2356:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2356:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2348:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:27:2"
                },
                {
                  "expression": {
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 743,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "2385:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 744,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "2393:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 582,
                      "src": "2393:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "2385:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:20:2"
                }
              ]
            },
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "1998:162:2",
              "text": "Confirm the purchase as buyer.\n Transaction has to include `2 * value` ether.\n The ether will be locked until confirmReceived\n is called."
            },
            "functionSelector": "d6960697",
            "id": 749,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 719,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2241:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 581,
                    "src": "2241:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 721,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 718,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "2233:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2233:22:2"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 723,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2274:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2274:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2288:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 726,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "2292:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2288:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 728,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2287:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2274:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 730,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 722,
                  "name": "condition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 598,
                  "src": "2264:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2264:35:2"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "2174:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:2:2"
            },
            "returnParameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:0:2"
            },
            "scope": 802,
            "src": "2165:247:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "2586:257:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 759,
                      "name": "ItemReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "2601:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "EmitStatement",
                  "src": "2596:19:2"
                },
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "2783:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 763,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "2791:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 583,
                      "src": "2791:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "2783:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "2830:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 767,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "2815:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2815:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:21:2"
                }
              ]
            },
            "documentation": {
              "id": 750,
              "nodeType": "StructuredDocumentation",
              "src": "2418:95:2",
              "text": "Confirm that you (the buyer) received the item.\n This will release the locked ether."
            },
            "functionSelector": "73fac6f0",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 752,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 622,
                  "src": "2554:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2554:9:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 755,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2572:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 582,
                    "src": "2572:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 757,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 754,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "2564:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2564:21:2"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2527:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2542:2:2"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:0:2"
            },
            "scope": 802,
            "src": "2518:325:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "3013:265:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 784,
                      "name": "SellerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "3028:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3028:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "EmitStatement",
                  "src": "3023:21:2"
                },
                {
                  "expression": {
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 787,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "3212:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 788,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "3220:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                          "typeString": "type(enum BetExchange.State)"
                        }
                      },
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "3220:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$585",
                        "typeString": "enum BetExchange.State"
                      }
                    },
                    "src": "3212:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "3212:22:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3261:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 796,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "3265:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3261:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 792,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "3245:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3245:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:26:2"
                }
              ]
            },
            "documentation": {
              "id": 775,
              "nodeType": "StructuredDocumentation",
              "src": "2849:92:2",
              "text": "This function refunds the seller, i.e.\n pays back the locked funds of the seller."
            },
            "functionSelector": "c7981b1b",
            "id": 801,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 777,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 634,
                  "src": "2979:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2979:10:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 780,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "2998:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$585_$",
                        "typeString": "type(enum BetExchange.State)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 583,
                    "src": "2998:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$585",
                      "typeString": "enum BetExchange.State"
                    }
                  }
                ],
                "id": 782,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 779,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "2990:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2990:22:2"
              }
            ],
            "name": "refundSeller",
            "nameLocation": "2955:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:2:2"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3013:0:2"
            },
            "scope": 802,
            "src": "2946:332:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 803,
        "src": "61:3219:2",
        "usedErrors": [
          601,
          604,
          607,
          610
        ]
      }
    ],
    "src": "36:3245:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-22T13:19:06.900Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidState()": [
        {
          "notice": "The function cannot be called at the current state."
        }
      ],
      "OnlyBuyer()": [
        {
          "notice": "Only the buyer can call this function."
        }
      ],
      "OnlySeller()": [
        {
          "notice": "Only the seller can call this function."
        }
      ],
      "ValueNotEven()": [
        {
          "notice": "The provided value has to be even."
        }
      ]
    },
    "kind": "user",
    "methods": {
      "abort()": {
        "notice": "Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked."
      },
      "confirmPurchase()": {
        "notice": "Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ether will be locked until confirmReceived is called."
      },
      "confirmReceived()": {
        "notice": "Confirm that you (the buyer) received the item. This will release the locked ether."
      },
      "refundSeller()": {
        "notice": "This function refunds the seller, i.e. pays back the locked funds of the seller."
      }
    },
    "version": 1
  }
}